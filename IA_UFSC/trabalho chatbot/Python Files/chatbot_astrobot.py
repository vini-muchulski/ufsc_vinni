# -*- coding: utf-8 -*-
"""Chatbot AstroBot

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BJbrfZqY3ngiDMq8ThHRzZoUMylK-ik9

# teste json astronomia
"""

!pip install chatterbot chatterbot_corpus spacy==3.7.4 -q
!python -m spacy download pt_core_news_sm -q

"""--------------------"""

import os
os.environ['TF_ENABLE_ONEDNN_OPTS'] = '0'

import json
from chatterbot import ChatBot
from chatterbot.trainers import ListTrainer
from chatterbot.languages import POR

nome_arquivo_json = 'perguntas_astronomia_langchain.json'
conversa_para_treino = []

try:
    with open(nome_arquivo_json, 'r', encoding='utf-8') as f:
        dados_json = json.load(f)

    for item in dados_json:
        if 'pergunta' in item and 'resposta' in item:
            conversa_para_treino.append(item['pergunta'])
            conversa_para_treino.append(item['resposta'])
        else:
            print(f"Aviso: Item inválido no JSON (sem 'pergunta' ou 'resposta'): {item}")

except FileNotFoundError:
    print(f"Erro: Arquivo '{nome_arquivo_json}' não encontrado.")
    print("Certifique-se de que o arquivo JSON está no mesmo diretório que o script.")
    exit()
except json.JSONDecodeError:
    print(f"Erro: O arquivo '{nome_arquivo_json}' não contém um JSON válido.")
    exit()
except Exception as e:
    print(f"Ocorreu um erro inesperado ao ler o JSON: {e}")
    exit()

if not conversa_para_treino:
    print("Erro: Nenhum dado válido encontrado no JSON para treinamento.")
    exit()

chatbot_astro = ChatBot(
    "BotAstronomico",
    storage_adapter='chatterbot.storage.SQLStorageAdapter',
    database_uri='sqlite:///db_astronomia.sqlite3',
    logic_adapters=[
        {
            'import_path': 'chatterbot.logic.BestMatch',
            'default_response': 'Desculpe, não entendi bem. Poderia reformular?',
            'maximum_similarity_threshold': 0.9
        }
    ],
    tagger_language=POR
)

trainer_astro = ListTrainer(chatbot_astro)
print(f"Iniciando treinamento com {len(conversa_para_treino) // 2} pares de pergunta/resposta...")
trainer_astro.train(conversa_para_treino)
print("Treinamento concluído!")

print("\nOlá! Sou o Bot Astronômico. Pergunte-me algo sobre astronomia (digite 'parar' para sair).")
while True:
    try:
        mensagem = input("Você: ")
        if mensagem.lower() == "parar":
            print("Bot: Até a próxima!")
            break
        resposta = chatbot_astro.get_response(mensagem, read_only=True)
        print(f"Bot: {resposta}")
    except (KeyboardInterrupt, EOFError):
        print("\nBot: Encerrando...")
        break
    except Exception as e:
        print(f"Ocorreu um erro inesperado durante a conversa: {e}")
        break