;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   qua set 20 2023
; Processor: PIC16F877A
; Compiler:  MPASM (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================
   list p=16f877a 	; LIST is a directive; a directive it is
					; a command or information for the assembler 
					; or linker to make it behave

#include <P16f877A.inc> ; Include register definition file

   CBLOCK 0x20 	; mapeamento da memória - área da RAM para memória 
				; de dados -  GPR
      FLAGS
      VAR_AUX
      W_TEMP
      S_TEMP
    ENDC

;====================================================================
; VARIABLES
;====================================================================
#define LED1 		PORTB, 0 ; apelidos
#define LED2 		PORTB, 1 ; apelidos
#define FIM_500MS 	FLAGS, 0

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================


   ORG  0x00     ; Reset Vector
      GOTO  START
      
   ORG 0x04		; Interruption Vector
   
   MOVWF	W_TEMP		; SALVAMENTO DE CONTEXTO
						; MOVE DE DADO P/ UMA POSIÇÃO DE MEMÓRIA
   MOVF		STATUS, W	; MOVENDO DE UMA POSIÇÃO DE MEMÓRIA 
						; P/ DADO	
   MOVWF	S_TEMP		; SALVOU O VALOR DE STATUS EM S_TEMP

   BTFSS	INTCON, TMR0IF ; VERIFICA FLAG DO INTCON->T0IF
   GOTO		SAIDA_INT
   
   BCF		INTCON, TMR0IF ; LIMPA O BIT A CADA INTERRUPÇÃO
   MOVLW	.6			; REPRESENTAÇÃO EM DECIMAL
						; B'XXXX' EM BINÁRIO
   ADDWF	TMR0, F		; JOGADA PARA CONTAR 250 E NÃO 256
   DECFSZ	VAR_AUX, F	; DECREMENTA ATÉ ZERAR -> MEIO SEGUNDO
   GOTO		SAIDA_INT
   
   MOVLW	.250
   MOVWF	VAR_AUX
   BSF		FIM_500MS	; SETA O BIT DE FIM_500MS
 
 SAIDA_INT ; RESTAURANDO CONTEXTO
   MOVF		STATUS, W
   MOVWF	STATUS
   MOVF		W_TEMP
   
   RETFIE
   
;====================================================================
; CODE SEGMENT
;====================================================================

START

   BSF		STATUS, RP0 ; Seleciona Banco 1 - set bit rp0
   
   MOVLW	B'11111100' ; PARA MANIPULAR UMA INFORMAÇÃO DE UM 
						; REGISTRO PARA OUTRO -> SALVA EM WORK E 
						; DEPOIS MOVE PARA O REGISTRO
   MOVWF	TRISB		; CONFIGURA PORTB - 0: SAÍDA - 1: ENTRADA
   
   MOVLW	B'00000110'
   MOVWF	ADCON1		; PORTA -> POSSUI ADC -> PARA CONFIGURAR
						; AS PORTAS COMO DIGITAIS-> VER DATASHEET
						; PAG.128 
						
   MOVLW	B'11010010' ; DIVIDINDO O CLK EM 8
   MOVWF	OPTION_REG	; CONF. PUL-UP/EDGEs/TMR SOURCE/PREESCALER

   BCF		STATUS, RP0

   MOVLW 	.250
   MOVWF	VAR_AUX
   BCF		FIM_500MS
   BCF		LED1
   BCF		LED2
   
   MOVLW	.6
   MOVWF	TMR0
   BSF		INTCON, 7 ; Habilitar a interrupção global (GIE)
   BSF		INTCON, 5 ; Habilitar a interrupção do Timer 0 (TMR0)


   
LOOP  
      BTFSS	FIM_500MS 	; VERIFICA FLAG FIM_500MS a
						; PASSOU MEIO SEGUNDO?
      GOTO 	LOOP
      BCF	FIM_500MS	; ZERA O FLAG
      
	  BTFSS	LED1		; LED TÁ LIGADO
      GOTO	LED_ON		; SE NÃO TÁ LIGADO -> LIGA
	  BCF   LED1		; ZERA FLAG
	  BSF   LED2
	  GOTO  LOOP
  
LED_ON
      BSF	LED1
	  BCF	LED2
      GOTO 	LOOP
       
;====================================================================
      END
